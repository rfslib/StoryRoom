
on-screen keyboard
https://github.com/topics/virtual-keyboard-python # points to four github projects
https://cppsecrets.com/users/5617971101051071011161151049711410997484852494964103109971051084699111109/On-Screen-Keyboard-using-Python.php
https://stackoverflow.com/questions/60136473/how-to-call-and-close-a-virtual-keyboard-made-by-tkinter-using-touchscreen-displ
https://masterprograming.com/how-to-create-virtual-onscreen-keyboard-using-python-and-tkinter/

------------------------------------------
pip install psutil
------------------------------------------
pass events from control screen to main
https://stackoverflow.com/questions/32771369/how-to-pass-an-event-to-parent-tkinter-widget
---------------------------------------

the websocket has GetStats, which includes available disk space
----------------------------------------

websocket (for the family)
https://github.com/obsproject/obs-websocket/releases/tag/4.9.1
https://github.com/obsproject/obs-websocket/releases/download/4.9.1/obs-websocket-4.9.1-Windows-Installer.exe

https://github.com/IRLToolkit/simpleobsws
xpip install simpleobsws didn't work (why?), copy and pasted into directory from github -- turns out it was the wrong version
also pip install dataclasses (??in user, not global??)

---------------------------------------------
secondary display ideas:
https://stackoverflow.com/questions/30312875/tikinter-winfo-screenwidth-when-used-with-dual-monitors
https://stackoverflow.com/questions/17741928/tkinter-screen-wdith-and-height-of-secondary-display

----------------------------------------
multiple windows:
https://pythonguides.com/python-tkinter-multiple-windows-tutorial/

-------------------------------------------------------------
https://www.geeksforgeeks.org/transparent-window-in-tkinter/#:~:text=To%20create%20a%20transparent%20window,use%20the%20attributes()%20method.&text=To%20create%20a%20transparent%20background,is%20%5B0.0%2C1.0%5D.

# Import module
from tkinter import *

# Create object
root = Tk()

# Adjust size
root.geometry("400x400")

# Create transparent window
root.attributes('-alpha',0.5)

# Execute tkinter
root.mainloop()

--------------------------------------------------------
remove title bar

https://www.tutorialspoint.com/how-to-create-a-resizable-windows-without-title-bar-in-tkinter

# Import the required libraries
from tkinter import *
from tkinter import ttk

# Create an instance of tkinter frame or window
win=Tk()

# Set the size of the window
win.geometry("700x350")

# Remove the Title bar of the window
win.overrideredirect(True)

# Define a function for resizing the window
def moveMouseButton(e):
   x1=winfo_pointerx()
   y1=winfo_pointery()
   x0=winfo_rootx()
   y0=winfo_rooty()

   win.geometry("%s x %s" % ((x1-x0),(y1-y0)))

# Add a Label widget
label=Label(win,text="Grab the lower-right corner to resize the window")
label.pack(side="top", fill="both", expand=True)

# Add the gripper for resizing the window
grip=ttk.Sizegrip()
grip.place(relx=1.0, rely=1.0, anchor="se")
grip.lift(label)
grip.bind("<B1-Motion>", moveMouseButton)

win.mainloop()

-----------------------------------
timer

https://www.delftstack.com/howto/python-tkinter/how-to-use-a-timer-in-tkinter/

try:
    import Tkinter as tk
except:
    import tkinter as tk
    
import time

class Clock():
    def __init__(self):
        self.root = tk.Tk()
        self.label = tk.Label(text="", font=('Helvetica', 48), fg='red')
        self.label.pack()
        self.update_clock()
        self.root.mainloop()

    def update_clock(self):
        now = time.strftime("%H:%M:%S")
        self.label.configure(text=now)
        self.root.after(1000, self.update_clock)

app=Clock()

--------------------------------------------
https://www.pythontutorial.net/tkinter/tkinter-window/
multiple windows
--------------------------------------------
